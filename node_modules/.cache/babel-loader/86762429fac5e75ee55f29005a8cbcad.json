{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ali Ch\\\\React\\\\food-app\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./CartContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  item: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  console.log(state);\n\n  if (action.type === \"ADD\") {\n    const updatedItems = state.item.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      item: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Ali Ch/React/food-app/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","item","totalAmount","cartReducer","state","action","console","log","type","updatedItems","concat","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemHandler","removeItemHandler","id","cartContext","items","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,IAAI,EAAE,EADiB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,MAAIC,MAAM,CAACG,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,YAAY,GAAGL,KAAK,CAACH,IAAN,CAAWS,MAAX,CAAkBL,MAAM,CAACJ,IAAzB,CAArB;AAEA,UAAMU,kBAAkB,GACtBP,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACJ,IAAP,CAAYW,KAAZ,GAAoBP,MAAM,CAACJ,IAAP,CAAYY,MADtD;AAEA,WAAO;AACLZ,MAAAA,IAAI,EAAEQ,YADD;AAELP,MAAAA,WAAW,EAAES;AAFR,KAAP;AAID;;AACD,SAAOX,gBAAP;AACD,CAbD;;AAeA,MAAMc,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCnB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;AAKA,QAAMkB,cAAc,GAAIjB,IAAD,IAAU;AAC/BgB,IAAAA,kBAAkB,CAAC;AAAET,MAAAA,IAAI,EAAE,KAAR;AAAeP,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAGA,QAAMkB,iBAAiB,GAAIC,EAAD,IAAQ;AAChCH,IAAAA,kBAAkB,CAAC;AAAET,MAAAA,IAAI,EAAE,QAAR;AAAkBY,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG;AAClBC,IAAAA,KAAK,EAAEN,SAAS,CAACM,KADC;AAElBpB,IAAAA,WAAW,EAAEc,SAAS,CAACd,WAFL;AAGlBqB,IAAAA,OAAO,EAAEL,cAHS;AAIlBM,IAAAA,UAAU,EAAEL;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGN,KAAK,CAACU;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzBD;;GAAMX,Y;;KAAAA,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./CartContext\";\r\n\r\nconst defaultCartState = {\r\n  item: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  console.log(state);\r\n  if (action.type === \"ADD\") {\r\n    const updatedItems = state.item.concat(action.item);\r\n\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n    return {\r\n      item: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n  const removeItemHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemHandler,\r\n    removeItem: removeItemHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}